function solution(n) {
    // for (let i = 2; i < n; i++) {
    //     if (n % i === 1) {
    //         return i;
    //     }
    // }
    
    /* 
    n=15일 때 x는 14도 될 수 있지만 14의 약수인 2, 7도 될 수 있음
    n=1000일 때 x는 999도 될 수 있지만 999의 약수인 333도 될 수 있음
    
    1. n-1의 1을 제외한 가장 작은 약수 찾기
    (Math.sqrt를 이용해 n-1의 제곱근보다 작거나 같은 수 중에서 조사)
    
    2. 반복문 안에서 가장 작은 약수가 나왔다면 반환
    
    3. 만약 나오지 않았다면 n-1은 소수이므로 n-1 반환
    */
    for (let i = 2; i <= Math.sqrt(n-1); i++) {
        if ((n-1) % i === 0) {
            return i;
        }
    }
    return n-1;
}